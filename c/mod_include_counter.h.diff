--- mod_include.h	2023-03-25 12:14:15.757178178 -0700
+++ mod_include_counter.h	2023-03-25 12:11:53.186970085 -0700
@@ -15,28 +15,29 @@
  */
 
 /**
- * @file mod_include.h
- * @brief Server Side Include Filter Extension Module for Apache
+ * @file mod_include_counter.h
+ * @brief Server Side Include Filter Extension Module for Apache w/ Counter
  *
- * @defgroup MOD_INCLUDE mod_include
+ * @defgroup MOD_INCLUDE_COUNTER mod_include_counter
  * @ingroup APACHE_MODS
  * @{
  */
 
-#ifndef _MOD_INCLUDE_H
-#define _MOD_INCLUDE_H 1
+#ifndef _MOD_INCLUDE_COUNTER_H
+#define _MOD_INCLUDE_COUNTER_H 1
 
 #include "apr_pools.h"
 #include "apr_optional.h"
+#include "util_filter.h"
 
 /*
- * Constants used for ap_ssi_get_tag_and_value's decode parameter
+ * Constants used for ap_ssic_get_tag_and_value's decode parameter
  */
 #define SSI_VALUE_DECODED 1
 #define SSI_VALUE_RAW     0
 
 /*
- * Constants used for ap_ssi_parse_string's leave_name parameter
+ * Constants used for ap_ssic_parse_string's leave_name parameter
  */
 #define SSI_EXPAND_LEAVE_NAME 1
 #define SSI_EXPAND_DROP_NAME  0
@@ -53,15 +54,15 @@
 /*
  * These constants are used to set or clear flag bits.
  */
-#define SSI_FLAG_PRINTING         (1<<0)  /* Printing conditional lines. */
-#define SSI_FLAG_COND_TRUE        (1<<1)  /* Conditional eval'd to true. */
-#define SSI_FLAG_SIZE_IN_BYTES    (1<<2)  /* Sizes displayed in bytes.   */
-#define SSI_FLAG_NO_EXEC          (1<<3)  /* No Exec in current context. */
-
-#define SSI_FLAG_SIZE_ABBREV      (~(SSI_FLAG_SIZE_IN_BYTES))
-#define SSI_FLAG_CLEAR_PRINT_COND (~((SSI_FLAG_PRINTING) | \
-                                     (SSI_FLAG_COND_TRUE)))
-#define SSI_FLAG_CLEAR_PRINTING   (~(SSI_FLAG_PRINTING))
+#define SSIC_FLAG_PRINTING         (1<<0)  /* Printing conditional lines. */
+#define SSIC_FLAG_COND_TRUE        (1<<1)  /* Conditional eval'd to true. */
+#define SSIC_FLAG_SIZE_IN_BYTES    (1<<2)  /* Sizes displayed in bytes.   */
+#define SSIC_FLAG_NO_EXEC          (1<<3)  /* No Exec in current context. */
+
+#define SSIC_FLAG_SIZE_ABBREV      (~(SSIC_FLAG_SIZE_IN_BYTES))
+#define SSIC_FLAG_CLEAR_PRINT_COND (~((SSIC_FLAG_PRINTING) | \
+                                     (SSIC_FLAG_COND_TRUE)))
+#define SSIC_FLAG_CLEAR_PRINTING   (~(SSIC_FLAG_PRINTING))
 
 /*
  * The public SSI context structure
@@ -73,7 +74,7 @@
     /* temp pool; will be cleared after the execution of every directive */
     apr_pool_t  *dpool;
 
-    /* See the SSI_FLAG_XXXXX definitions. */
+    /* See the SSIC_FLAG_XXXXX definitions. */
     int          flags;
 
     /* nesting of *invisible* ifs */
@@ -100,21 +101,21 @@
     /* pointer to internal (non-public) data, don't touch */
     struct ssi_internal_ctx *intern;
 
-} include_ctx_t;
+} include_counter_ctx_t;
 
-typedef apr_status_t (include_handler_fn_t)(include_ctx_t *, ap_filter_t *,
+typedef apr_status_t (include_counter_handler_fn_t)(include_counter_ctx_t *, ap_filter_t *,
                                             apr_bucket_brigade *);
 
-APR_DECLARE_OPTIONAL_FN(void, ap_ssi_get_tag_and_value,
-                        (include_ctx_t *ctx, char **tag, char **tag_val,
+APR_DECLARE_OPTIONAL_FN(void, ap_ssic_get_tag_and_value,
+                        (include_counter_ctx_t *ctx, char **tag, char **tag_val,
                          int dodecode));
 
-APR_DECLARE_OPTIONAL_FN(char*, ap_ssi_parse_string,
-                        (include_ctx_t *ctx, const char *in, char *out,
+APR_DECLARE_OPTIONAL_FN(char*, ap_ssic_parse_string,
+                        (include_counter_ctx_t *ctx, const char *in, char *out,
                          apr_size_t length, int leave_name));
 
-APR_DECLARE_OPTIONAL_FN(void, ap_register_include_handler,
-                        (char *tag, include_handler_fn_t *func));
+APR_DECLARE_OPTIONAL_FN(void, ap_register_include_counter_handler,
+                        (char *tag, include_counter_handler_fn_t *func));
 
-#endif /* MOD_INCLUDE */
+#endif /* MOD_INCLUDE_COUNTER */
 /** @} */
